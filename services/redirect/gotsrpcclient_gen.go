// Code generated by gotsrpc https://github.com/foomo/gotsrpc/v2  - DO NOT EDIT.

package redirect

import (
	go_context "context"
	go_net_http "net/http"

	github_com_foomo_contentserver_content "github.com/foomo/contentserver/content"
	gotsrpc "github.com/foomo/gotsrpc/v2"
	github_com_foomo_redirects_redirection "github.com/foomo/redirects/redirection"
	pkg_errors "github.com/pkg/errors"
)

type RedirectionServiceGoTSRPCClient interface {
	Create(ctx go_context.Context, def *github_com_foomo_redirects_redirection.RedirectDefinition) (retCreate_0 error, clientErr error)
	CreateRedirectsFromContentserverexport(ctx go_context.Context, old map[Dimension]*github_com_foomo_contentserver_content.RepoNode, new map[Dimension]*github_com_foomo_contentserver_content.RepoNode) (retCreateRedirectsFromContentserverexport_0 error, clientErr error)
	Delete(ctx go_context.Context, id string) (retDelete_0 error, clientErr error)
	Search(ctx go_context.Context, dimension string, id string, path string) (retSearch_0 []*github_com_foomo_redirects_redirection.RedirectDefinition, retSearch_1 error, clientErr error)
	Update(ctx go_context.Context, def *github_com_foomo_redirects_redirection.RedirectDefinition) (retUpdate_0 error, clientErr error)
}

type HTTPRedirectionServiceGoTSRPCClient struct {
	URL      string
	EndPoint string
	Client   gotsrpc.Client
}

func NewDefaultRedirectionServiceGoTSRPCClient(url string) *HTTPRedirectionServiceGoTSRPCClient {
	return NewRedirectionServiceGoTSRPCClient(url, "/services/redirects/redirect")
}

func NewRedirectionServiceGoTSRPCClient(url string, endpoint string) *HTTPRedirectionServiceGoTSRPCClient {
	return NewRedirectionServiceGoTSRPCClientWithClient(url, endpoint, nil)
}

func NewRedirectionServiceGoTSRPCClientWithClient(url string, endpoint string, client *go_net_http.Client) *HTTPRedirectionServiceGoTSRPCClient {
	return &HTTPRedirectionServiceGoTSRPCClient{
		URL:      url,
		EndPoint: endpoint,
		Client:   gotsrpc.NewClientWithHttpClient(client),
	}
}
func (tsc *HTTPRedirectionServiceGoTSRPCClient) Create(ctx go_context.Context, def *github_com_foomo_redirects_redirection.RedirectDefinition) (retCreate_0 error, clientErr error) {
	args := []interface{}{def}
	reply := []interface{}{&retCreate_0}
	clientErr = tsc.Client.Call(ctx, tsc.URL, tsc.EndPoint, "Create", args, reply)
	if clientErr != nil {
		clientErr = pkg_errors.WithMessage(clientErr, "failed to call redirect.RedirectionServiceGoTSRPCProxy Create")
	}
	return
}

func (tsc *HTTPRedirectionServiceGoTSRPCClient) CreateRedirectsFromContentserverexport(ctx go_context.Context, old map[Dimension]*github_com_foomo_contentserver_content.RepoNode, new map[Dimension]*github_com_foomo_contentserver_content.RepoNode) (retCreateRedirectsFromContentserverexport_0 error, clientErr error) {
	args := []interface{}{old, new}
	reply := []interface{}{&retCreateRedirectsFromContentserverexport_0}
	clientErr = tsc.Client.Call(ctx, tsc.URL, tsc.EndPoint, "CreateRedirectsFromContentserverexport", args, reply)
	if clientErr != nil {
		clientErr = pkg_errors.WithMessage(clientErr, "failed to call redirect.RedirectionServiceGoTSRPCProxy CreateRedirectsFromContentserverexport")
	}
	return
}

func (tsc *HTTPRedirectionServiceGoTSRPCClient) Delete(ctx go_context.Context, id string) (retDelete_0 error, clientErr error) {
	args := []interface{}{id}
	reply := []interface{}{&retDelete_0}
	clientErr = tsc.Client.Call(ctx, tsc.URL, tsc.EndPoint, "Delete", args, reply)
	if clientErr != nil {
		clientErr = pkg_errors.WithMessage(clientErr, "failed to call redirect.RedirectionServiceGoTSRPCProxy Delete")
	}
	return
}

func (tsc *HTTPRedirectionServiceGoTSRPCClient) Search(ctx go_context.Context, dimension string, id string, path string) (retSearch_0 []*github_com_foomo_redirects_redirection.RedirectDefinition, retSearch_1 error, clientErr error) {
	args := []interface{}{dimension, id, path}
	reply := []interface{}{&retSearch_0, &retSearch_1}
	clientErr = tsc.Client.Call(ctx, tsc.URL, tsc.EndPoint, "Search", args, reply)
	if clientErr != nil {
		clientErr = pkg_errors.WithMessage(clientErr, "failed to call redirect.RedirectionServiceGoTSRPCProxy Search")
	}
	return
}

func (tsc *HTTPRedirectionServiceGoTSRPCClient) Update(ctx go_context.Context, def *github_com_foomo_redirects_redirection.RedirectDefinition) (retUpdate_0 error, clientErr error) {
	args := []interface{}{def}
	reply := []interface{}{&retUpdate_0}
	clientErr = tsc.Client.Call(ctx, tsc.URL, tsc.EndPoint, "Update", args, reply)
	if clientErr != nil {
		clientErr = pkg_errors.WithMessage(clientErr, "failed to call redirect.RedirectionServiceGoTSRPCProxy Update")
	}
	return
}
